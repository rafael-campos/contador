/* Remove previous @import url for Google Fonts if they will be handled by next/font in layout.tsx */
/* @import url('https://fonts.googleapis.com/css2?family=Great+Vibes&family=Dancing+Script&family=Cormorant+Garamond&family=Lora&display=swap'); */

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background-dark: #0d1b2a; /* Deep, dark navy blue */
  --background-light: #1b263b; /* Slightly lighter navy */
  --primary-accent: #95B9C7;   /* Serenity Blue */
  --text-primary: #F0F8FF;      /* Alice Blue / Creamy off-white */
  --text-secondary: #A9B4C2;    /* Lighter, softer gray-blue */

  /* Define font variables here if not solely relying on next/font's CSS variables */
  /* These will be overridden by next/font if set up correctly in layout.tsx */
  --font-dancing-script: 'Dancing Script', cursive;
  --font-cormorant-garamond: 'Cormorant Garamond', serif;
}

@layer base {
  body {
    background-color: var(--background-dark); /* Fallback if fixed background in layout isn't covering */
    color: var(--text-primary);
    font-family: var(--font-cormorant-garamond); /* Default body font */
    min-height: 100vh;
    overflow-x: hidden;
  }

  h1, h2, h3, .font-script { /* .font-script can be used for specific script text */
    font-family: var(--font-dancing-script);
  }

  /* Remove previous theme-specific utility classes if they are no longer needed */
  /* e.g., .bg-deep-burgundy, .text-rose-gold etc. */

  /* Any existing keyframes like fadeInUp, slideInLeft, etc. can be kept if they are generic enough,
     or removed if new animation approaches (e.g. framer-motion) will replace them.
     For now, keep existing @keyframes unless they conflict.
  */
}

/* Keep existing generic animations if they might still be useful,
   otherwise, they can be cleaned up later or as framer-motion is implemented.
   For example, fadeInUp, slideInLeft, slideInRight, pulseGlow, shimmer.
*/
@layer utilities {
  .animation-delay-500 {
    animation-delay: 0.5s;
  }
  .animation-delay-1000 {
    animation-delay: 1s;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fadeInUp {
    animation: fadeInUp 1s ease-out forwards;
    opacity: 0;
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .animate-slideInLeft {
    animation: slideInLeft 0.8s ease-out forwards;
    opacity: 0;
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .animate-slideInRight {
    animation: slideInRight 0.8s ease-out forwards;
    opacity: 0;
  }

  @keyframes pulseGlow { /* This might be themed later if needed */
    0%, 100% {
      filter: drop-shadow(0 0 3px var(--primary-accent));
      transform: scale(1);
    }
    50% {
      filter: drop-shadow(0 0 10px var(--primary-accent));
      transform: scale(1.1);
    }
  }

  .animate-pulseGlow {
    animation: pulseGlow 2.5s infinite ease-in-out;
  }

  @keyframes shimmer { /* This might be themed later if needed */
    0%, 100% {
      filter: drop-shadow(0 0 2px var(--primary-accent));
    }
    50% {
      filter: drop-shadow(0 0 8px var(--primary-accent)) brightness(1.5);
    }
  }

  .animate-shimmer {
    animation: shimmer 3s infinite ease-in-out;
  }

  @keyframes tick {
    0% {
      transform: scale(1);
      opacity: 0.7;
      color: var(--primary-accent); /* Highlight color */
    }
    50% {
      transform: scale(1.15);
      opacity: 1;
      color: var(--text-primary);
    }
    100% {
      transform: scale(1);
      opacity: 1;
      color: var(--text-primary);
    }
  }

  .animate-tick {
    animation: tick 0.4s ease-out; /* Short animation */
  }
}
